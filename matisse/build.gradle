/*
 * Copyright 2017 Zhihu Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//apply plugin: 'com.android.library'
////apply plugin: 'com.novoda.bintray-release'
//apply plugin: 'checkstyle'
//
//apply plugin: 'com.github.dcendents.android-maven'
//group='com.github.wwuxl'  //注意com.github.后面的为github账号

plugins {
    id 'com.android.library'
    id 'checkstyle'
    id 'maven-publish'
}

android {
    compileSdkVersion 32
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 32
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:1.3.0"
    implementation "androidx.annotation:annotation:1.4.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'it.sephiroth.android.library.imagezoom:library:1.0.4'

    compileOnly 'com.github.bumptech.glide:glide:4.12.0'
    compileOnly 'com.squareup.picasso:picasso:2.5.2'
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.wwuxl'
                artifactId = 'matisse'
                version = '1.0.1-beta01'
            }
        }
    }
}


task javadoc(type: Javadoc) {
    options.encoding = "utf-8"
}

checkstyle {
    toolVersion = '7.6.1'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

task checkstyle(type:Checkstyle) {
    description 'Runs Checkstyle inspection against matisse sourcesets.'
    group = 'Code Quality'
    configFile rootProject.file('checkstyle.xml')
    ignoreFailures = false
    showViolations true
    classpath = files()
    source 'src/main/java'
}
